<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>openBMC 1 简介</title>
    <link href="/2023/03/16/openBMC/"/>
    <url>/2023/03/16/openBMC/</url>
    
    <content type="html"><![CDATA[<span id="more"></span><p>在说OpenBMC之前，绕不开两个概念：BMC（Baseboard Manager Controller，简称BMC）、IPMI（Intelligent Platform Management Interface）。</p><h3 id="BMC"><a href="#BMC" class="headerlink" title="BMC"></a>BMC</h3><p>先说一下BMC（Baseboard Manager Controller，简称BMC），BMC应用了IPMI架构的智能性，是嵌入在计算机（通常是服务器）主板上的专用的微控制器。它是负责管理系统和管理软件与服务器平台硬件之间的一个接口。</p><p>简单来说，BMC就是用于监控和管理服务器的专用控制器，普通的PC是没有的，服务器的产品必配，因为相对于普通的PC来说，服务器在稳定性、安全性、可靠性、性能、可管理性等方面的要求都更高更严苛，这时候就需要BMC来管控服务器。</p><p>BMC的主要功能包括：</p><ul><li>设备信息管理：服务器型号、制造商、日期、各部件生产和技术信息、机箱信息、主板信息等、BMC信息（服务器主机名、IP、BMC固件版本等信息）；</li><li>服务器状态监控管理：对服务器各部件（CPU、内存、硬盘、风扇、机框等）的温度、电压等健康状态进行检测；</li><li>服务器远程控制管理：服务器的开关机、重启、维护、固件更新、系统安装等；</li><li>维护管理：日志管理、用户管理、BIOS管理、告警管理等。</li></ul><h3 id="IPMI"><a href="#IPMI" class="headerlink" title="IPMI"></a>IPMI</h3><p>IPMI：智能平台管理接口（Intelligent Platform Management Interface）原本是一种<a href="https://zh.wikipedia.org/wiki/Intel" title="Intel">Intel</a>架构的企业系统的周边设备所采用的一种工业标准。IPMI 能够横跨不同的操作系统、固件和硬件平台，可以智能的监控、控制和自动回报大量服务器的运作状况，以降低服务器系统成本。</p><p>IPMI独立于操作系统外自行运作，并容许管理者即使在缺少操作系统或系统管理软件、或受监控的系统关机但有接电源的情况下仍能远程管理系统。IPMI也能在操作系统启动后活动，与系统管理功能一并使用时还能提供加强功能，IPMI只定义架构和接口格式成为标准，详细实现可能会有所不同。</p><p>IPMI包含了一个以 基板管理控制器(<a href="https://zh.wikipedia.org/w/index.php?title=Baseboard_management_controller&action=edit&redlink=1" title="BMC">BMC</a>) 为主的控制器和其他分布在不同系统模块（被称为“卫星”控制器）的管理控制器，卫星控制器包含了相同的架构透过IPMB(Intelligent Platform Management Bus&#x2F;Bridge) - 一个<a href="https://zh.wikipedia.org/wiki/I%C2%B2C" title="I²C">I²C</a> (Inter-Integrated Circuit)加强实现的系统接口链接到基板管理控制器(BMC)，基板管理控制器(BMC) 也能与 远程管理控制协议(RMCP) - 一个在此规格内的特殊有线协议一同被管理。</p><h3 id="BMC于IPMI是什么关系？"><a href="#BMC于IPMI是什么关系？" class="headerlink" title="BMC于IPMI是什么关系？"></a>BMC于IPMI是什么关系？</h3><p>简而言之，IPMI是一种规范，一种协议，BMC包含其中，BMC是其中最重要的一个控制器，BMC就是服务器主板上一块独立的小板卡，有自己独立的处理器，和控制系统，通过IPMB、LPC（low-pin-count-interface）、SMBus等接口与主机硬件或者主机系统进行通信，并通过网络、串行&#x2F;Moderm、PCI等接口传向本地主机&#x2F;远程服务器提供查询和控制等功能</p><p>OpenBMC是BMC 的Linux发行版，旨在跨越异构系统，包括企业，高性能计算（HPC），电信和云规模数据中心等系统的管理。</p><p><img src="C:\Users\FanPf\AppData\Local\Temp\BNZ.6412d7ef235845c9\image\image_V625De4u_R.png"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>常用git命令</title>
    <link href="/2023/03/16/%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/03/16/%E5%B8%B8%E7%94%A8git%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>git使用过程中记录的一些常用命令，根据使用情况随时更新。</p><span id="more"></span><h2 id="一，Git全局的配置"><a href="#一，Git全局的配置" class="headerlink" title="一，Git全局的配置"></a>一，Git全局的配置</h2><p><em>配置文件为 ~&#x2F;<code>.gitconfig</code></em></p><p><strong>常用配置命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#查看当前的配置信息：</span><br><br><span class="hljs-variable">$git</span> config --list<br><br><span class="hljs-comment">#编辑配置文件：</span><br><br><span class="hljs-variable">$git</span> config -e [--global]<br><br><span class="hljs-comment">#配置提交代码时的账户信息：</span><br><br><span class="hljs-variable">$git</span> config [--global] user.name <span class="hljs-string">&quot;[name]&quot;</span><br><br><span class="hljs-variable">$git</span> config [--global] user.email <span class="hljs-string">&quot;[email address]&quot;</span><br></code></pre></td></tr></table></figure><h2 id="二，增加-x2F-删除文件"><a href="#二，增加-x2F-删除文件" class="headerlink" title="二，增加&#x2F;删除文件"></a>二，增加&#x2F;删除文件</h2><p><strong>常用增加&#x2F;删除文件命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#添加指定文件到暂存区</span><br><br><span class="hljs-variable">$git</span> add [file1] [file2] ...<br><br><span class="hljs-comment">#添加指定目录到暂存区，包括子目录</span><br><br><span class="hljs-variable">$git</span> add [<span class="hljs-built_in">dir</span>]<br><br><span class="hljs-comment">#添加当前目录的所有文件到暂存区</span><br><br><span class="hljs-variable">$git</span> add .<br><br><span class="hljs-comment">#添加每个变化前，都会要求确认# 对于同一个文件的多处变化，可以实现分次提交</span><br><br><span class="hljs-variable">$git</span> add -p<br><br><span class="hljs-comment">#删除工作区文件，并且将这次删除放入暂存区</span><br><br><span class="hljs-variable">$git</span> <span class="hljs-built_in">rm</span> [file1] [file2] ...<br><br><span class="hljs-comment">#停止追踪指定文件，但该文件会保留在工作区</span><br><br><span class="hljs-variable">$git</span> <span class="hljs-built_in">rm</span> --cached [file]<br><br><span class="hljs-comment">#改名文件，并且将这个改名放入暂存区</span><br><br><span class="hljs-variable">$git</span> <span class="hljs-built_in">mv</span> [file-original] [file-renamed]<br></code></pre></td></tr></table></figure><h2 id="三，代码提交"><a href="#三，代码提交" class="headerlink" title="三，代码提交"></a>三，代码提交</h2><p><strong>常用代码提交命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#提交暂存区到仓库区</span><br><span class="hljs-variable">$git</span> commit -m [message]<br> <br><span class="hljs-comment">#提交暂存区的指定文件到仓库区</span><br><span class="hljs-variable">$git</span> commit [file1] [file2] ... -m [message]<br> <br><span class="hljs-comment">#提交工作区自上次commit之后的变化，直接到仓库区</span><br><span class="hljs-variable">$git</span> commit -a<br> <br><span class="hljs-comment">#提交时显示所有diff信息</span><br><span class="hljs-variable">$git</span> commit -v<br> <br><span class="hljs-comment">#使用一次新的commit，替代上一次提交</span><br><span class="hljs-variable">$git</span> commit --amend -m [message]<br> <br><span class="hljs-comment">#重做上一次commit，并包括指定文件的新变化</span><br><span class="hljs-variable">$git</span> commit --amend [file1] [file2] ..<br></code></pre></td></tr></table></figure><h2 id="四，分支操作"><a href="#四，分支操作" class="headerlink" title="四，分支操作"></a>四，分支操作</h2><p><strong>常用分支操作命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#列出所有本地分支</span><br><span class="hljs-variable">$git</span> branch<br> <br><span class="hljs-comment">#列出所有远程分支</span><br><span class="hljs-variable">$git</span> branch -r<br> <br><span class="hljs-comment">#列出所有本地分支和远程分支</span><br><span class="hljs-variable">$git</span> branch -a<br> <br><span class="hljs-comment">#新建一个分支，但依然停留在当前分支</span><br><span class="hljs-variable">$git</span> branch [branch-name]<br> <br><span class="hljs-comment">#新建一个分支，并切换到该分支</span><br><span class="hljs-variable">$git</span> checkout -b [branch]<br> <br><span class="hljs-comment">#新建一个分支，指向指定commit</span><br><span class="hljs-variable">$git</span> branch [branch] [commit]<br> <br><span class="hljs-comment">#新建一个分支，与指定的远程分支建立追踪关系</span><br><span class="hljs-variable">$git</span> branch --track [branch] [remote-branch]<br> <br><span class="hljs-comment">#切换到指定分支，并更新工作区</span><br><span class="hljs-variable">$git</span> checkout [branch-name]<br> <br><span class="hljs-comment">#切换到上一个分支</span><br><span class="hljs-variable">$git</span> checkout -<br> <br><span class="hljs-comment">#建立追踪关系，在现有分支与指定的远程分支之间</span><br><span class="hljs-variable">$git</span> branch --set-upstream [branch] [remote-branch]<br> <br><span class="hljs-comment">#合并指定分支到当前分支</span><br><span class="hljs-variable">$git</span> merge [branch]<br> <br><span class="hljs-comment">#选择一个commit，合并进当前分支</span><br><span class="hljs-variable">$git</span> cherry-pick [commit]<br> <br><span class="hljs-comment">#删除分支</span><br><span class="hljs-variable">$git</span> branch -d [branch-name]<br></code></pre></td></tr></table></figure><h2 id="五，查看提交变更"><a href="#五，查看提交变更" class="headerlink" title="五，查看提交变更"></a>五，查看提交变更</h2><p><strong>常用 git log 命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#显示有变更的文件</span><br><span class="hljs-variable">$git</span> status<br> <br><span class="hljs-comment">#显示当前分支的版本历史</span><br><span class="hljs-variable">$git</span> <span class="hljs-built_in">log</span><br> <br><span class="hljs-comment">#显示commit历史，以及每次commit发生变更的文件</span><br><span class="hljs-variable">$git</span> <span class="hljs-built_in">log</span> --<span class="hljs-built_in">stat</span><br> <br><span class="hljs-comment">#显示指定文件相关的每一次diff</span><br><span class="hljs-variable">$git</span> <span class="hljs-built_in">log</span> -p [file]<br> <br><span class="hljs-comment">#显示过去5次提交</span><br><span class="hljs-variable">$git</span> <span class="hljs-built_in">log</span> -5 --pretty --oneline<br> <br><span class="hljs-comment">#显示指定文件是什么人在什么时间修改过</span><br><span class="hljs-variable">$git</span> blame [file]<br> <br><span class="hljs-comment">#显示暂存区和工作区的差异</span><br><span class="hljs-variable">$git</span> diff<br> <br><span class="hljs-comment">#显示暂存区和上一个commit的差异</span><br><span class="hljs-variable">$git</span> diff --cached [file]<br> <br><span class="hljs-comment">#显示某次提交的元数据和内容变化</span><br><span class="hljs-variable">$git</span> show [commit]<br> <br><span class="hljs-comment">#显示某次提交发生变化的文件</span><br><span class="hljs-variable">$git</span> show --name-only [commit]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>my new post</title>
    <link href="/2023/03/16/my-new-post/"/>
    <url>/2023/03/16/my-new-post/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/03/16/hello-world/"/>
    <url>/2023/03/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
